"use strict";(self.webpackChunk_adobe_uix_docs=self.webpackChunk_adobe_uix_docs||[]).push([[123],{16488:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return p}});var i=t(87462),o=t(45987),a=(t(15007),t(64983)),s=t(91515);const r=["components"],d={},c={_frontmatter:d},u=s.Z;function p(e){let{components:n}=e,t=(0,o.Z)(e,r);return(0,a.mdx)(u,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"working-with-events"},"Working with Events"),(0,a.mdx)("p",null,"The Universal Editor sends defined events to remote applications. In case the remote application has no custom event listener for the sent event, a fallback event listener provided by the universal-editor-cors package is executed."),(0,a.mdx)("h3",{id:"working-with-events-1"},"Working with Events"),(0,a.mdx)("p",null,"If your business logic requires sending an event to the Universal Editor, you can use the ",(0,a.mdx)("inlineCode",{parentName:"p"},"triggerEvent")," method.\nHere's an example of how to dispatch the ",(0,a.mdx)("inlineCode",{parentName:"p"},"aue:ui-viewport-change")," event:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"    useEffect(() => {\n        (async () => {\n            const guestConnection = await attach({id: extensionId});\n            ...\n                   await guestConnection.host.remoteApp.triggerEvent('aue:ui-viewport-change',\n                        'main',\n                        {\n                          details: {\n                            height: 1024,\n                            width: 768,\n                          }\n                        }\n                    );\n            ...\n        })();\n    }, []);\n")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-services-aem-universal-editor-api-events-index-md-8185edcb069a872c8667.js.map