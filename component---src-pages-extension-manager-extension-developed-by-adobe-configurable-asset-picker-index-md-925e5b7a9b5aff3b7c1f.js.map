{"version":3,"file":"component---src-pages-extension-manager-extension-developed-by-adobe-configurable-asset-picker-index-md-925e5b7a9b5aff3b7c1f.js","mappings":"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","sources":["webpack://@adobe/uix-docs/./src/pages/extension-manager/extension-developed-by-adobe/configurable-asset-picker/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uix/uix/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"universal-editor-custom-asset-picker\"\n    }}>{`Universal Editor Custom Asset Picker`}</h1>\n    <p>{`This extension allows creating a configurable, custom asset picker for Universal Editor that is tailored to your need by simply providing a JSON configuration file. Relevant crosswalk project needs to follow certain guidelines.\nIt's useful in case where we want to enable authors to select assets of certain file types, image sizes, only from specified repositories etc.`}</p>\n    <h2 {...{\n      \"id\": \"extension-overview\"\n    }}>{`Extension Overview`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/uix/assets/64b279332d31adfc84d6c931c06bb1a4/asset-picker-extension.gif\",\n        \"alt\": \"Asset picker\"\n      }}></img></p>\n    <p>{`This extension enhances `}<a parentName=\"p\" {...{\n        \"href\": \"../../../services/aem-universal-editor/\"\n      }}>{`Universal Editor`}</a>{` properties panel for media elements. It replaces standard asset picker with a custom version of asset picker, with provided configuration applied while selecting assets.`}</p>\n    <p>{`Following type of configuration is available:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`AEM tier type (\"delivery\", \"author\" etc.)`}</li>\n      <li parentName=\"ul\">{`Repo names to select assets from`}</li>\n      <li parentName=\"ul\">{`ApiKey`}</li>\n    </ul>\n    <p>{`Configuration also supports following types of filters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`File type (Images, Video etc.)`}</li>\n      <li parentName=\"ul\">{`Asset size (height, width)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"configuration-in-edge-delivery-site\"\n    }}>{`Configuration in Edge Delivery Site`}</h2>\n    <p>{`Adding a component for author in crosswalk site is like adding any other custom component, with some added fields. A sample custom component `}<inlineCode parentName=\"p\">{`Custom Image One`}</inlineCode>{` will have following code in files:`}</p>\n    <h3 {...{\n      \"id\": \"a-new-component-model-in-component-modelsjson\"\n    }}>{`A New Component Model in `}<inlineCode parentName=\"h3\">{`component-models.json`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{}}>{`[\n...\n    {\n        \"id\": \"custom-asset-one\",\n        \"fields\": [\n          {\n            \"component\": \"custom-asset-namespace:custom-asset\",\n            \"name\": \"image\",\n            \"label\": \"Image\",\n            \"configUrl\": \"https://main--xwalk-test-gems--githubusername.hlx.page/tools/assets-selector/image.config.json\",\n            \"valueType\": \"string\"\n          },\n          {\n            \"component\": \"custom-asset-namespace:custom-asset-mimetype\",\n            \"valueType\": \"string\",\n            \"name\": \"imageMimeType\"\n          },\n          {\n            \"component\": \"text\",\n            \"name\": \"imageAlt\",\n            \"label\": \"Alt Text\",\n            \"valueType\": \"string\"\n          }\n        ]\n      }\n]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{`: can be any value.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Image component`}</inlineCode>{`: must have `}<inlineCode parentName=\"li\">{`custom-asset-namespace:custom-asset`}</inlineCode>{` value, because it has been overridden in the extension to display customized asset selector popup.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`configUrl`}</inlineCode>{`: points to JSON configuration file, can be hosted anywhere you prefer. Must be accessible to the extension, which runs in author's web browser. Extension will fetch this JSON file and configure asset picker for this component accordingly.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`imageMimeType component`}</inlineCode>{`: must have `}<inlineCode parentName=\"li\">{`custom-asset-namespace:custom-asset-mimetype`}</inlineCode>{` value, because it has been overridden in the extension to contain selected asset MIME Type.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Alt-Text component`}</inlineCode>{`: Optional, it's like any other additional component you may want to add.`}</li>\n    </ul>\n    <p>{`This model is necessary for custom asset picker to show up when user clicks on its option it in properties panel.`}</p>\n    <h3 {...{\n      \"id\": \"a-new-definition-in-component-definitionjson\"\n    }}>{`A New Definition in `}<inlineCode parentName=\"h3\">{`component-definition.json`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"groups\": [\n    …\n    {\n      \"title\": \"Blocks\",\n      \"id\": \"blocks\",\n      \"components\": [\n       …\n        {\n          \"title\": \"Custom Image One\",\n          \"id\": \"custom-asset-one\",\n          \"plugins\": {\n            \"xwalk\": {\n              \"page\": {\n                \"resourceType\": \"core/franklin/components/block/v1/block\",\n                \"template\": {\n                  \"name\": \"Custom Image One\",\n                  \"model\": \"custom-asset-one\"\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Note that the value of model is the id of model we created in `}<inlineCode parentName=\"p\">{`component-models.json`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`title`}</inlineCode>{` will show up as component name in `}<inlineCode parentName=\"li\">{`➕`}</inlineCode>{` (add component) button menu present on right side panel of universal editor.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"entry-in-component-filtersjson\"\n    }}>{`Entry in `}<inlineCode parentName=\"h2\">{`component-filters.json`}</inlineCode></h2>\n    <pre><code parentName=\"pre\" {...{}}>{`[\n  …\n  {\n    \"id\": \"section\",\n    \"components\": [\n      \"text\",\n      \"image\",\n      \"button\",\n      …\n      \"custom-asset-one\"\n    ]\n  }\n]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overriding-name-of-component-for-using-custom-asset-picker\"\n    }}>{`Overriding name of component for using custom asset picker`}</h2>\n    <p>{`in `}<inlineCode parentName=\"p\">{`component-models.json`}</inlineCode>{` file, the component property need to have component as `}<inlineCode parentName=\"p\">{`custom-asset-namespace:custom-asset`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`custom-asset-namespace:custom-asset-mimetype`}</inlineCode>{`.\nIf desired, this can be overridden by following method: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/uix/docs/extension-manager/feature-highlights/#configuring-extension-parameters\"\n        }}>{`Adding a parameter in extension configuration`}</a>{` with key as `}<inlineCode parentName=\"li\">{`asset-namespace`}</inlineCode>{` and any desired value (e.g. `}<inlineCode parentName=\"li\">{`my-namespace`}</inlineCode>{`). `}</li>\n      <li parentName=\"ul\">{`Use `}<inlineCode parentName=\"li\">{`my-namespace:custom-asset`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`my-namespace:custom-asset-mimetype`}</inlineCode>{` instead of above values in `}<inlineCode parentName=\"li\">{`component-models.json`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"configuration-file\"\n    }}>{`Configuration File`}</h2>\n    <p>{`This is sample asset picker configuration file that allows filtering assets by image-only file type and asset width between 0 - 1000px. It also has some other configuration fields which are self-explanatory.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"aemTierType\": [\n        \"delivery\",\n        \"author\"\n    ],\n    \"apiKey\": \"asset_search_service\",\n    \"repoNames\": [\n      \"author-p7452-e733061.adobeaemcloud.com\",\n      \"author-p7452-e12437.adobeaemcloud.com\",\n      \"delivery-p130360-e1272151.adobeaemcloud.com\",\n      \"author-p130360-e1272151.adobeaemcloud.com\"\n    ],\n    \"preferredDimensions\":{\n        \"minWidth\": 500,\n        \"maxWidth\": 2000, \n        \"minHeight\": 500,\n        \"maxHeight\": 2000\n    },\n    \"filterSchema\": [\n        {\n            \"fields\": [\n                {\n                    \"element\": \"checkbox\",\n                    \"name\": \"type\",\n                    \"defaultValue\": [\n                        \"image/*\"\n                    ],\n                    \"options\": [\n                        {\n                            \"label\": \"Image\",\n                            \"value\": \"image/*\",\n                            \"readOnly\": true\n                        }\n                    ],\n                    \"orientation\": \"horizontal\"\n                }\n            ],\n            \"header\": \"File Type\",\n            \"groupKey\": \"FileTypeGroup\"\n        },\n        {\n            \"fields\": [\n              {\n                \"element\": \"Number\",\n                \"name\": \"property=tiff:imageWidth\",\n                \"range\": true,\n                \"quiet\": true,\n                \"label\": \"Width\",\n                \"hideArrows\": true,\n                \"columns\": 2,\n                \"readOnly\": true,\n                \"defaultValue\": [\n                  {\n                    \"min\": 0,\n                    \"max\": 1000\n                  }\n                ]\n              }\n            ],\n            \"header\": \"Size\",\n            \"groupKey\": \"SizeGroup\"\n          }\n    ]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"limitations\"\n    }}>{`Limitations`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`This custom asset picker can only be opened by clicking on selector in its properties panel. Unlike default asset picker, we can't click the asset to open it.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}