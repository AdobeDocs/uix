{"version":3,"file":"component---src-pages-services-aem-assets-view-api-commons-index-md-1e26f4dd12c418a84aaf.js","mappings":"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","sources":["webpack://@adobe/uix-docs/./src/pages/services/aem-assets-view/api/commons/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uix/uix/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"common-concepts-in-creating-extensions\"\n    }}>{`Common Concepts in Creating Extensions`}</h1>\n    <p>{`Understand the fundamentals required to develop an extension for the AEM Assets View.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`UI Extensibility is supported in Assets Ultimate only.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`To get access to Assets View UI extensibility,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://helpx.adobe.com/enterprise/using/support-for-experience-cloud.html\"\n      }}>{`create and submit an Adobe Customer Support case`}</a>{`.\nYou can provide documentation feedback by clicking \"Log an issue\".`}</p>\n    <h2 {...{\n      \"id\": \"extension-point\"\n    }}>{`Extension Point`}</h2>\n    <p>{`AEM Assets View has an `}<inlineCode parentName=\"p\">{`aem/assets/details/1`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/app-builder/docs/guides/extensions/\"\n      }}>{`extension point`}</a>{`\nthat allows you to extend its functionality in the Details View.\nTo declare it to be used by your extension, you need to add the following configuration to your `}<inlineCode parentName=\"p\">{`app.config.yaml`}</inlineCode>{` at the\nroot of your extension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`extensions:\n  aem/assets/details/1:\n    $include: src/aem-assets-details-1/ext.config.yaml\n`}</code></pre>\n    <p>{`Here is an example of `}<inlineCode parentName=\"p\">{`ext.config.yaml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`operations:\n  view:\n    - type: web\n      impl: index.html\nactions: actions\nweb: web-src\n`}</code></pre>\n    <p>{`More `}<strong parentName=\"p\">{`extension points`}</strong>{` may be added in future releases to add extensibility features to other parts of the AEM Assets View.`}</p>\n    <h2 {...{\n      \"id\": \"extension-registration\"\n    }}>{`Extension Registration`}</h2>\n    <p>{`Interaction between UI Extension and AEM Assets View starts with the initialization process that includes extension's\ncapabilities registration so AEM Assets View knows when to invoke the extension and which APIs to expose. Registration is done by calling the `}<inlineCode parentName=\"p\">{`register()`}</inlineCode>{`\nfunction provided by `}<inlineCode parentName=\"p\">{`@adobe/uix-guest`}</inlineCode>{` library. This asynchronous function takes single object that describes extension\nand returns an object representing connection to the AEM Assets View.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`register()`}</inlineCode>{` function should be invoked after extension initialization page is loaded.`}</p>\n    <p>{`Extension registration data must include:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` - string with random extension identifier. This identifier is useful for debugging of interaction between AEM Assets\nView and extension and is needed if extension provides custom UI.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`methods`}</inlineCode>{` - objects with the extension APIs exposed to the AEM Assets View. All methods are grouped into\n`}<strong parentName=\"li\">{`namespaces`}</strong>{` that represent more granular areas of AEM Assets View functionality within the extension point.\nCurrently, only the following `}<strong parentName=\"li\">{`namespace`}</strong>{` is available:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`detailSidePanel`}</inlineCode>{`, that allows to add custom side panels in the Details View`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`More `}<strong parentName=\"p\">{`namespaces`}</strong>{` may be added in future releases to add more extensibility features within the Details View.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { register } from '@adobe/uix-guest';\n\n// ...\n\n      const guestConnection = await register({\n        id: 'extension-id',\n        methods: {\n          detailSidePanel: {\n            getPanels() {\n              // ..\n            }\n          },\n        }\n      });\n// ...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"building-extension-ui\"\n    }}>{`Building Extension UI`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`aem/assets/details/1`}</inlineCode>{` extension point and its `}<inlineCode parentName=\"p\">{`detailSidePanel`}</inlineCode>{` `}<strong parentName=\"p\">{`namespace`}</strong>{` requires UI extension to provide\nits own interface for the custom side panel. This interface should be implemented as a separate entry point within the extension\nweb application.`}</p>\n    <p>{`Normally this interface needs data from the AEM Assets View or needs to trigger certain action within the host application.\nTo support this the interface page should establish its own connection with AEM Assets View  using the `}<inlineCode parentName=\"p\">{`attach()`}</inlineCode>{` function\nprovided by `}<inlineCode parentName=\"p\">{`@adobe/uix-guest`}</inlineCode>{` library.`}</p>\n    <p>{`In this example, the interface page establishes a connection with the AEM Assets View using extension `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` and obtains\nthe AEM host URL:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { attach } from '@adobe/uix-guest';\n\nconst guestConnection = await attach({ id: 'extension-id' });\nconst aemHost = await guestConnection.discovery.getAemHost();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"set-up-communication-with-aem-assets-view\"\n    }}>{`Set up communication with AEM Assets View`}</h2>\n    <p>{`Both `}<inlineCode parentName=\"p\">{`register()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`attach()`}</inlineCode>{` functions of `}<inlineCode parentName=\"p\">{`@adobe/uix-guest`}</inlineCode>{` library return the same connection object that has `}<inlineCode parentName=\"p\">{`host`}</inlineCode>{` property and\nexposes AEM Assets View API to UI Extensions. Through this API you can access data from the host application as well as\ninvoke certain actions within it.`}</p>\n    <h2 {...{\n      \"id\": \"common-apis-exposed-by-aem-assets-view-to-all-ui-extensions\"\n    }}>{`Common APIs exposed by AEM Assets View to all UI Extensions`}</h2>\n    <p>{`The APIs documented below are available to all AEM Assets View UI Extensions, irrespective of the extension point they are using.`}</p>\n    <p>{`Every API is defined under its own namespace, which in turn is contained within the `}<inlineCode parentName=\"p\">{`host`}</inlineCode>{` object of the connection instance.`}</p>\n    <p>{`All API invocations are asynchronous and return a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"authentication-api\"\n    }}>{`Authentication API`}</h3>\n    <p>{`This API provides information about the current Org, access token and API key in the AEM Assets View.\nThe API uses `}<inlineCode parentName=\"p\">{`auth`}</inlineCode>{` namespace.`}</p>\n    <p><inlineCode parentName=\"p\">{`auth.getIMSInfo()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` returns information about IMS Org name, Id and access token.`}</p>\n    <p><strong parentName=\"p\">{`Return Object Structure`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`imsOrg`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`): The IMS organization identifier.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`imsOrgName`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`): The name of the IMS organization.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`accessToken`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`): The access token for the IMS.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`auth.getApiKey()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` returns API key used by the AEM Assets View.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{` (`}<inlineCode parentName=\"p\">{`string`}</inlineCode>{`): API key `}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { imsOrg, accessToken } = await guestConnection.host.auth.getIMSInfo();\n\nconst apiKey = await guestConnection.host.auth.getAPIKey();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"discovery-api\"\n    }}>{`Discovery API`}</h3>\n    <p>{`This API provides information AEM author instance location.`}</p>\n    <p><inlineCode parentName=\"p\">{`discovery.getAemHost()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` returns the URL of the AEM author instance.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{` (`}<inlineCode parentName=\"p\">{`string`}</inlineCode>{`): AEM author instance URL`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const aemHost = await guestConnection.host.discovery.getAemHost();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"toast-api\"\n    }}>{`Toast API`}</h3>\n    <p>{`This API provides methods to show toast messages in the AEM Assets View.`}</p>\n    <p><inlineCode parentName=\"p\">{`toast.display({ variant, message })`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` shows a toast message in the AEM Assets View.`}</p>\n    <p><strong parentName=\"p\">{`Parameters:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`options`}</strong>{` (`}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`): Object with the following properties:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`variant (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, optional): The type of toast message. Possible values are `}<inlineCode parentName=\"li\">{`neutral`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`positive`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`info`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`negative`}</inlineCode>{`. Default value is `}<inlineCode parentName=\"li\">{`info`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`message (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, required): The message to display in the toast.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`guestConnection.host.toast.display({ variant: 'positive', message: 'Asset saved successfully' });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"router-api\"\n    }}>{`Router API`}</h3>\n    <p>{`This API provides methods to navigate to different parts of the AEM Assets View.`}</p>\n    <p><inlineCode parentName=\"p\">{`router.navigateToAssetDetails({ assetPath })`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` navigates to a Details View of the specific asset.`}</p>\n    <p><strong parentName=\"p\">{`Parameters:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`options`}</strong>{` (`}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`): Object with the following properties:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`assetPath (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, required): The path to the asset in the AEM Assets View.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`guestConnection.host.router.navigateToAssetDetails({ assetPath: '/content/dam/my-assets/image.jpg' });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"i18n-api\"\n    }}>{`i18n API`}</h3>\n    <p>{`This API provides methods to support localization of the UI Extension.`}</p>\n    <p><inlineCode parentName=\"p\">{`i18n.getLocalizationInfo()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` returns information about the current locale used in the AEM Assets View.`}</p>\n    <p><strong parentName=\"p\">{`Return Object Structure`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`locale`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`): The current locale used in the AEM Assets View.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { locale } = await guestConnection.host.i18n.getLocalizationInfo();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"theme-api\"\n    }}>{`Theme API`}</h3>\n    <p>{`This API provides methods to retrieve the current host application color scheme. `}</p>\n    <p><inlineCode parentName=\"p\">{`theme.getThemeInfo()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` returns information about the current color scheme used in the AEM Assets View.`}</p>\n    <p><strong parentName=\"p\">{`Return Object Structure`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`colorScheme`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`): The current color scheme locale used in the AEM Assets View, either `}<inlineCode parentName=\"li\">{`light`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`dark`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { colorScheme } = await guestConnection.host.theme.getThemeInfo();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"modal-api\"\n    }}>{`Modal API`}</h3>\n    <p>{`This API provides methods to open a modal dialog in the host application, close it and retrieve the payload associated with it.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"47.1875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uix/static/4698ba2d0cea67bcd254e715dce717eb/5530d/custom-dialog.webp 320w\", \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/0c8fb/custom-dialog.webp 640w\", \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/94b1e/custom-dialog.webp 1280w\", \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/7ef45/custom-dialog.webp 1624w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uix/static/4698ba2d0cea67bcd254e715dce717eb/dd4a7/custom-dialog.png 320w\", \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/0f09e/custom-dialog.png 640w\", \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/bbbf7/custom-dialog.png 1280w\", \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/fc0cd/custom-dialog.png 1624w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uix/static/4698ba2d0cea67bcd254e715dce717eb/bbbf7/custom-dialog.png\",\n            \"alt\": \"custom dialog\",\n            \"title\": \"custom dialog\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p><inlineCode parentName=\"p\">{`modal.openDialog(options)`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` opens a dialog with the configuration info provided. The dialog content is loaded from a specified url.`}</p>\n    <p><strong parentName=\"p\">{`Parameters:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`options`}</strong>{` (`}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`): Object with the following dialog configuration properties:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`title (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, optional): The title of the dialog.`}</li>\n          <li parentName=\"ul\">{`contentUrl (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`): Relative root to the dialog's content.`}</li>\n          <li parentName=\"ul\">{`type (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, optional): The type of the dialog. Possible values are `}<inlineCode parentName=\"li\">{`modal`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`fullscreen`}</inlineCode>{`. Default value is `}<inlineCode parentName=\"li\">{`modal`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`size (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, optional): The size of the dialog. Possible values are `}<inlineCode parentName=\"li\">{`S`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`M`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`L`}</inlineCode>{`. Default value is `}<inlineCode parentName=\"li\">{`M`}</inlineCode>{`.  Ignored when the dialog type is `}<inlineCode parentName=\"li\">{`fullscreen`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`payload (`}<inlineCode parentName=\"li\">{`any`}</inlineCode>{`, optional): arbitrary payload object the extension may want to pass over the code inside the dialog. This payload object can later be accessed by the extension via `}<inlineCode parentName=\"li\">{`modal.getPayload()`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <p>{`These code snippets demonstrate how to create a custom dialog using UIX SDK library and add open it in the Host\napplication.  (The examples below serve illustrative purposes thus omit certain `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` statements and other\nnon-important parts.)`}</p>\n    <p>{`Here, the main application code defines three routes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`the first two are the default routes which trigger the `}<inlineCode parentName=\"li\">{`ExtensionRegistration`}</inlineCode>{` component responsible for initial extension registration\nwithin the AEM Assets View application.`}</li>\n      <li parentName=\"ul\">{`the `}<inlineCode parentName=\"li\">{`modal-custom-action`}</inlineCode>{` route which invokes the `}<inlineCode parentName=\"li\">{`ModalCustomAction`}</inlineCode>{` component responsible for rendering the\ncustom dialog content. This route gets called by the AEM Assets View application when the extension calls `}<inlineCode parentName=\"li\">{`modal.openDialog`}</inlineCode>{`.\nDuring the registration the extension will specify `}<inlineCode parentName=\"li\">{`/#modal-custom-action`}</inlineCode>{` as content location.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from 'react';\nimport ErrorBoundary from 'react-error-boundary';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport ExtensionRegistration from './ExtensionRegistration';\nimport ModalCustomAction from './ModalCustomAction';\n\nfunction App() {\n    return (\n        <Router>\n            <ErrorBoundary onError={onError} FallbackComponent={fallbackComponent}>\n                <Routes>\n                    <Route index element={<ExtensionRegistration />} />\n                    <Route exact path=\"index.html\" element={<ExtensionRegistration />} />\n                    <Route path=\"modal-custom-action\" element={<ModalCustomAction />} />\n                    // YOUR CUSTOM ROUTES SHOULD BE HERE\n                </Routes>\n            </ErrorBoundary>\n        </Router>\n    );\n\n    // Methods\n\n    // error handler on UI rendering failure\n    function onError(e, componentStack) {}\n\n    // component to show if UI fails rendering\n    function fallbackComponent({ componentStack, error }) {\n        return (\n            <React.Fragment>\n                <h1 style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                    Extension rendering error\n                </h1>\n                <pre>{componentStack + '\\\\n' + error.message}</pre>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ModalCustomAction`}</inlineCode>{` component is responsible for rendering the custom dialog content. It uses the `}<inlineCode parentName=\"p\">{`attach()`}</inlineCode>{` function\nprovided by the `}<inlineCode parentName=\"p\">{`@adobe/uix-guest`}</inlineCode>{` library to establish a connection with the AEM Assets View and uses this connection object to\nobtain the theme information of the AEM Assets View for rendering its content with the matching theme.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default function ModalCustomAction() {\n    // Fields\n    const [guestConnection, setGuestConnection] = useState();\n    const [colorScheme, setColorScheme] = useState('light');\n\n    useEffect(() => {\n        (async () => {\n            const guestConnection = await attach({ id: extensionId });\n            setGuestConnection(guestConnection);\n\n            const { colorScheme } = await guestConnection.host.theme.getThemeInfo();\n            setColorScheme(colorScheme);\n        })()\n    }, []);\n\n    function closeDialog() {\n        guestConnection.host.modal.closeDialog();\n    }\n\n    return (\n\n        <Provider theme={defaultTheme} colorScheme={colorScheme}>\n\n            <View>\n                <View paddingBottom=\"size-300\">\n                    <Text>Please visit <Link href=\"https://developer.adobe.com/uix/docs/\">UI Extensibility documentation</Link> to get started.</Text>\n\n                    <Flex justifyContent=\"center\" paddingBottom=\"size-300\">\n                        <ButtonGroup>\n                            <Button variant=\"primary\" onPress={() => closeDialog()}>Close</Button>\n                        </ButtonGroup>\n                    </Flex>\n                </View>\n            </View>\n        </Provider>\n    );\n}\n`}</code></pre>\n    <p>{`The custom dialog can be opened in Assets View using `}<inlineCode parentName=\"p\">{`modal.openDialog`}</inlineCode>{` and passing in the dialog's content url, title,\ntype size and an optional payload object.  The custom dialog component can retrieve the payload object using\n`}<inlineCode parentName=\"p\">{`modal.getPayload()`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`'onClick': async () => {\n    guestConnection.host.modal.openDialog({\n        title: 'Custom Dialog',\n        contentUrl: '/#modal-custom-action',\n        type: 'modal',\n        size: 'S',\n        payload: { /* arbitrary payload */ }\n    });\n},\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`modal.closeDialog()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` closes currently active dialog.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function closeDialog() {\n    guestConnection.host.modal.closeDialog();\n}\n\n<View>\n  <ButtonGroup>\n    <Button variant=\"primary\" onPress={() => closeDialog()}>Close</Button>\n  </ButtonGroup>\n</View>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`modal.getPayload();`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Description:`}</strong>{` returns the payload object which could potentially be used by the extension code when calling\n`}<inlineCode parentName=\"p\">{`modal.openDialog()`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Returns`}</strong>{` optional arbitrary payload object.`}</p>\n    <p><strong parentName=\"p\">{`Example:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const payload = await guestConnection.host.modal.getPayload();\n// work with payload\n// ...\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}