{"version":3,"file":"component---src-pages-services-aem-cf-console-admin-api-grid-columns-index-md-816139a0b7c123ae5e22.js","mappings":"0RAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,iCAA+B,kCAEvCA,EAAAA,EAAAA,KAAA,8IACAA,EAAAA,EAAAA,KAAA,gIACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,qnBAuB9BH,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,kBAEvBA,EAAAA,EAAAA,KAAA,cACEA,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,UAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,aAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,QAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,YAC9BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,OAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,8DAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,iBAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,YAC9BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,OAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,6CAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,aAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,aAC9BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,QAEXH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,0CAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,qBAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,aAA2B,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,gBAC1FH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,8CAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,SAGbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,WAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,cAC9BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,QAEXH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,uDAKrBH,EAAAA,EAAAA,KAAA,MACE,GAAM,mBAAiB,oBAEzBA,EAAAA,EAAAA,KAAA,kLACiDA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,sCAAsCH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,uCAC9KH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,MACnEH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,2MAUlC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://@adobe/uix-docs/./src/pages/services/aem-cf-console-admin/api/grid-columns/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uix/uix/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"content-fragment-grid-columns\"\n    }}>{`Content Fragment Grid Columns`}</h1>\n    <p>{`The content fragment grid is located below the header menu and action bar, and it displays a list of all the content fragments. `}</p>\n    <p>{`By utilizing the extension point, you can add custom grid columns, make them sortable, and apply custom rendering.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const guestConnection = await register({\n  id: \"aem-headless-ui-ext-examples-progress-circle\",\n  methods: {\n    contentFragmentGrid: {\n        getColumns() {\n        return [\n            {\n                id: \"extended\",\n                label: \"Extended\",\n                render: async function (fragments) {\n                    return fragments.reduce((accumulator, fragment) => {\n                        accumulator[fragment.id] = fragment.name + '-extension-one';\n                        return accumulator;\n                    })\n                }\n            }\n        ]\n        }\n    }\n  }\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"api-reference\"\n    }}>{`API Reference`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`key`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`✔️`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key of the column, must be unique between all extensions`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelMessage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`✔️`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label of the column as seen by the user`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Wether the column is sortable or not`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultSortOrder`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ascending`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`descending`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default order in which to sort the column`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`render`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function that will be used to render the column`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"render-function\"\n    }}>{`Render Function`}</h2>\n    <p>{`The render function will receive the list of fragment currently in the state of the application and will need to\nreturn an object with keys the id of the fragment (`}<inlineCode parentName=\"p\">{`frament.id`}</inlineCode>{`) and with property being of type `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{`. If the value\nwould be casted to `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function (fragments) {\n    return fragments.reduce((accumulator, fragment) => {\n        accumulator[fragment.id] = fragment.name + '-extension-one';\n        return accumulator;\n    })\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}