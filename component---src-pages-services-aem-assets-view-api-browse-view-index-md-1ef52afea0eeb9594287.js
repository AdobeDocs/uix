"use strict";(self.webpackChunk_adobe_uix_docs=self.webpackChunk_adobe_uix_docs||[]).push([[9612],{79974:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return u}});var a=t(87462),i=t(45987),o=(t(15007),t(64983)),s=t(91515);const r=["components"],d={},l=(m="InlineAlert",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)});var m;const c={_frontmatter:d},p=s.Z;function u(e){let{components:n}=e,t=(0,i.Z)(e,r);return(0,o.mdx)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"browse-view"},"Browse View"),(0,o.mdx)("p",null,"AEM Assets View offers the ability to customize the ActionBar and QuickActions in the Browse View."),(0,o.mdx)(l,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"UI Extensibility is supported in Assets Ultimate only."),(0,o.mdx)(l,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"To get access to Assets View UI extensibility,\n",(0,o.mdx)("a",{parentName:"p",href:"https://helpx.adobe.com/enterprise/using/support-for-experience-cloud.html"},"create and submit an Adobe Customer Support case"),'.\nYou can provide documentation feedback by clicking "Log an issue".'),(0,o.mdx)("p",null,"The Browse View in the AEM Assets View refers to the asset listing pages such as\nAssets, Collections, Recent, Search and Trash."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"ActionBar")," is the blue bar with actions that appears at the top when one or more assets in the\nBrowse View are selected."),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1242px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"10%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uix/static/b07c95f7e96375b76be547133379695a/5530d/action-bar.webp 320w","/uix/static/b07c95f7e96375b76be547133379695a/0c8fb/action-bar.webp 640w","/uix/static/b07c95f7e96375b76be547133379695a/cd45f/action-bar.webp 1242w"],sizes:"(max-width: 1242px) 100vw, 1242px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uix/static/b07c95f7e96375b76be547133379695a/dd4a7/action-bar.png 320w","/uix/static/b07c95f7e96375b76be547133379695a/0f09e/action-bar.png 640w","/uix/static/b07c95f7e96375b76be547133379695a/b72ad/action-bar.png 1242w"],sizes:"(max-width: 1242px) 100vw, 1242px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/uix/static/b07c95f7e96375b76be547133379695a/b72ad/action-bar.png",alt:"action bar",title:"action bar",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"QuickActions")," is the dropdown menu from the More action button (shown as ",(0,o.mdx)("inlineCode",{parentName:"p"},"â‹¯"),") next to each asset.\n",(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"352px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"85.9375%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uix/static/9c39720f90c011df6eb31070572b9973/5530d/quick-actions.webp 320w","/uix/static/9c39720f90c011df6eb31070572b9973/36f5a/quick-actions.webp 352w"],sizes:"(max-width: 352px) 100vw, 352px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uix/static/9c39720f90c011df6eb31070572b9973/dd4a7/quick-actions.png 320w","/uix/static/9c39720f90c011df6eb31070572b9973/3a2f8/quick-actions.png 352w"],sizes:"(max-width: 352px) 100vw, 352px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/uix/static/9c39720f90c011df6eb31070572b9973/3a2f8/quick-actions.png",alt:"quick actions",title:"quick actions",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("p",null,"Extensions should use the ",(0,o.mdx)("inlineCode",{parentName:"p"},"aem/assets/browse/1")," extension point to utilize extensibility services of the Browse View."),(0,o.mdx)("p",null,"An extension needs to implement both ",(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"quickActions")," namespace to be recognized by Assets View."),(0,o.mdx)("h2",{id:"custom-actionbar-actions-and-quickactions-menu-actions"},"Custom ActionBar actions and QuickActions menu actions"),(0,o.mdx)("p",null,"This extensibility feature allows context-aware customization of the ActionBar actions and the QuickActions menu actions\nassociated with the selected assets."),(0,o.mdx)("p",null,"Using the ",(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar")," namespace, custom actions could be added to the ActionBar after the list of built-in actions, and\nthe built-in actions could be overridden or hidden based on the context and the selected assets."),(0,o.mdx)("p",null,"In this example, a custom action is added to the ActionBar after the list of built-in ActionBar actions."),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"44.0625%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/5530d/action-bar-action.webp 320w","/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/0c8fb/action-bar-action.webp 640w","/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/94b1e/action-bar-action.webp 1280w","/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/d2134/action-bar-action.webp 1493w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/dd4a7/action-bar-action.png 320w","/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/0f09e/action-bar-action.png 640w","/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/bbbf7/action-bar-action.png 1280w","/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/d771d/action-bar-action.png 1493w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/uix/static/6f3cc3a74dcc9ab8d7afbe54ee709f3b/bbbf7/action-bar-action.png",alt:"ActionBar actions",title:"ActionBar actions",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("p",null,"Using the ",(0,o.mdx)("inlineCode",{parentName:"p"},"quickActions")," namespace, built-in QuickActions menu actions can be overridden or hidden based on the context and the\nselected asset."),(0,o.mdx)("h2",{id:"api-reference"},"API Reference"),(0,o.mdx)("p",null,"This API reference section is further broken down into two parts: the API provided by the AEM Assets View host application\nto the extension and the API provided by the extension to the AEM Assets View host application."),(0,o.mdx)("h3",{id:"host-api-reference"},"Host API Reference"),(0,o.mdx)("p",null,"In addition to the ",(0,o.mdx)("a",{parentName:"p",href:"../commons"},"Common API")," provided by AEM Assets View to all extensions,\nthe host application provides the following definitions that are specific to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"aem/assets/browse/1")," extension point,\nthe ",(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"quickActions")," namespaces."),(0,o.mdx)("h4",{id:"browsing-context"},"Browsing context"),(0,o.mdx)("p",null,'Assets View supports assets browsing experiences in multiple modes, or "contexts". The current context\nis communicated to Extension APIs, so that the custom code within Extension can adapt to the\nstate of Assets View.'),(0,o.mdx)("p",null,"The supported browsing contexts are:"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Browsing Context"),(0,o.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"assets")),(0,o.mdx)("td",{parentName:"tr",align:null},"Main asset browsing experience")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"collections")),(0,o.mdx)("td",{parentName:"tr",align:null},"Collections listing")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"recent")),(0,o.mdx)("td",{parentName:"tr",align:null},"Recent listing")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"search")),(0,o.mdx)("td",{parentName:"tr",align:null},"Search results listing")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"trash")),(0,o.mdx)("td",{parentName:"tr",align:null},"Assets in trash")))),(0,o.mdx)("h4",{id:"built-in-actions"},"Built-in actions"),(0,o.mdx)("p",null,"The host application allows hiding certain built-in actions. Depending on the browsing content, below is the list of\naction ids of actions that can be hidden:"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Browsing Context"),(0,o.mdx)("th",{parentName:"tr",align:null},"Action IDs that can be hidden or overridden"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"assets")),(0,o.mdx)("td",{parentName:"tr",align:null},'"edit", "openInExpress", "reprocess", "copy", "move", "rename", "bulkRename", "managePermissions", "delete", "publish", "download", "share"')),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"collections")),(0,o.mdx)("td",{parentName:"tr",align:null},'"openInExpress", "rename", "managePermissions", "delete", "download", "share"')),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"recent")),(0,o.mdx)("td",{parentName:"tr",align:null},"-")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"search")),(0,o.mdx)("td",{parentName:"tr",align:null},'"edit", "openInExpress", "reprocess", "copy", "move", "rename", "bulkRename", "managePermissions", "delete", "publish", "download", "share"')),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"trash")),(0,o.mdx)("td",{parentName:"tr",align:null},'"delete"')))),(0,o.mdx)("h3",{id:"extension-api-reference"},"Extension API Reference"),(0,o.mdx)("p",null,"The extension definition object passed by the extension to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"register()")," function defines the ",(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar")," and\n",(0,o.mdx)("inlineCode",{parentName:"p"},"quickActions")," namespaces."),(0,o.mdx)("p",null,"The methods in these two namespaces provide the capabilities to"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Add custom actions to the ActionBar"),(0,o.mdx)("li",{parentName:"ul"},"Hide or customize built-in actions in the ActionBar and QuickActions")),(0,o.mdx)("p",null,"based on the browsing context and asset selection."),(0,o.mdx)("h4",{id:"actionbar-namespace"},"actionBar namespace"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar")," namespace include these 3 methods"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"getActions({ context, resourceSelection })")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"getHiddenBuiltInActions({ context, resourceSelection })")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"overrideBuiltInAction({ actionId, context, resourceSelection })"))),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar.getActions({ context, resourceSelection })")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Description:")," returns an array of custom action descriptors or an empty array if no custom actions should be added\nto the ActionBar in the specified context for the selected assets."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Parameters:")),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"context (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): current ",(0,o.mdx)("a",{parentName:"li",href:"#browsing-context"},"browsing context"),"."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"resourceSelection")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),"): an object representing the asset selection.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"resources (",(0,o.mdx)("inlineCode",{parentName:"li"},"array"),"): an array of selected assets.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"id (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset URN."),(0,o.mdx)("li",{parentName:"ul"},"path (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset path.")))))),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Returns")," (",(0,o.mdx)("inlineCode",{parentName:"p"},"array"),") an array of custom action descriptors or an empty array if no custom actions should be added to the ActionBar."),(0,o.mdx)("p",null,"Each array element is a custom action descriptor that is a JSON with the following properties:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"id")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): action id, unique within given extension."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"label")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): Custom action title."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"icon")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): Name of the ",(0,o.mdx)("a",{parentName:"li",href:"https://react-spectrum.adobe.com/react-spectrum/workflow-icons.html#available-icons"},"React-Spectrum workflow icon"),"."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"onClick")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"function"),"): An activation handler.")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example:")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"actionBar: {\n    getActions: ({ context, resourceSelection }) => {\n        return [{\n            'id': 'customId',\n            'icon': 'Form',\n            'label': 'Custom label',\n            'onClick': async () => {\n                // ...\n            }\n        }];\n    },\n}\n")),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"getHiddenBuiltInActions({ context, resourceSelection })")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Description:"),"  returns an array of ",(0,o.mdx)("a",{parentName:"p",href:"#built-in-actions"},"built-in action id")," that should be hidden in the specified context for the selected assets."),(0,o.mdx)("p",null,"This method is called by the host application to determine which built-in actions are to be hidden.\nThe host calls this method once whenever the asset selection changes."),(0,o.mdx)("p",null,"Extension code should ensure that this method returns fast because the host application blocks the rendering of the\nActionBar until the actions' visibility could be determined.\nIn particular it is recommended not to use backend server calls in this method."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Parameters:")),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"context (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): current ",(0,o.mdx)("a",{parentName:"li",href:"#browsing-context"},"browsing context")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"resourceSelection")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),"): an object representing the asset selection",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"resources (",(0,o.mdx)("inlineCode",{parentName:"li"},"array"),"): an array of selected assets.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"id (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset URN."),(0,o.mdx)("li",{parentName:"ul"},"path (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset path.")))))),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Returns")," (",(0,o.mdx)("inlineCode",{parentName:"p"},"array"),") an array of action ids that should be hidden from the ActionBar, or an empty array in case no action needs to be hidden"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example:")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"getHiddenBuiltInActions: ({ context, resourceSelection }) => {\n   return [];\n},\n")),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"overrideBuiltInAction({ actionId, context, resourceSelection })")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Description:"),"  Return true to indicate the Host should perform the built-in action, false otherwise. "),(0,o.mdx)("p",null,"This method is called by the Host when the user activates one of the built-in actions, before invoking the actual action\nhandler. The method returns true if the Extension had performed custom action processing and the Host should not invoke\nbuilt-in action handler. Otherwise the method call returns false, to indicate that the Extension\nhad ignored the invocation and the Host should use built-in action handler."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Parameters:")),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"actionId (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): ",(0,o.mdx)("a",{parentName:"li",href:"#built-in-actions"},"built-in action id"),"."),(0,o.mdx)("li",{parentName:"ul"},"context (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): current ",(0,o.mdx)("a",{parentName:"li",href:"#browsing-context"},"browsing context"),"."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"resourceSelection")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),"): an object representing the asset selection.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"resources (",(0,o.mdx)("inlineCode",{parentName:"li"},"array"),"): an array of selected assets.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"id (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset URN."),(0,o.mdx)("li",{parentName:"ul"},"path (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset path.")))))),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Returns")," (",(0,o.mdx)("inlineCode",{parentName:"p"},"boolean"),") false for Host to use built-in action handler, true to skip built-in handler and stop"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example:")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"overrideBuiltInAction: ({ actionId, context, resourceSelection }) => {\n    //do some custom tasks\n    return true;  // skip the Host's built-in handler and stop  \n},\n")),(0,o.mdx)("h4",{id:"quickactions-namespace"},"quickActions namespace"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"quickActions")," namespace include these 2 methods"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"getHiddenBuiltInActions({ context, resource })")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"overrideBuiltInAction({ actionId, context, resource })"))),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"getHiddenBuiltInActions({ context, resource })")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Description:"),"  returns an array of ",(0,o.mdx)("a",{parentName:"p",href:"#built-in-actions"},"built-in action id")," that should be hidden in the specified context for the selected asset."),(0,o.mdx)("p",null,"This method is called by the host application to determine which built-in actions are to be hidden.\nThe host calls this method once whenever QuickAction menu is triggered."),(0,o.mdx)("p",null,"Extension code should ensure that this method returns fast because the host application blocks the rendering of the\nQuickActions until the actions' visibility could be determined.\nIn particular it is recommended not to use backend server calls in this method."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Parameters:")),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"context (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): current ",(0,o.mdx)("a",{parentName:"li",href:"#browsing-context"},"browsing context"),"."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"resource")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),"): an object representing the selected asset.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"id (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset URN."),(0,o.mdx)("li",{parentName:"ul"},"path (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset path.")))),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Returns")," (",(0,o.mdx)("inlineCode",{parentName:"p"},"array"),") an array of action ids that should be hidden from the QuickActions menu, or an empty array in case no action needs to be hidden."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example:")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"getHiddenBuiltInActions: ({ context, resource }) => {\n    return [];\n},\n")),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"overrideBuiltInAction: ({ actionId, context, resource })")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Description:"),"  "),(0,o.mdx)("p",null,"This method is called by the Host when the user activates one of the built-in actions, before invoking the actual action\nhandler. The method returns true if the Extension had performed custom action processing and the Host should not invoke\nbuilt-in action handler. Otherwise the method call returns false, to indicate that the Extension\nhad ignored the invocation and the Host should use built-in action handler."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Parameters:")),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"actionId (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): ",(0,o.mdx)("a",{parentName:"li",href:"#built-in-actions"},"built-in action id"),"."),(0,o.mdx)("li",{parentName:"ul"},"context (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): current ",(0,o.mdx)("a",{parentName:"li",href:"#browsing-context"},"browsing context"),"."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"resource")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),"): an object representing the selected asset.",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"id (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset URN."),(0,o.mdx)("li",{parentName:"ul"},"path (",(0,o.mdx)("inlineCode",{parentName:"li"},"string"),"): selected asset path.")))),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Returns")," (",(0,o.mdx)("inlineCode",{parentName:"p"},"boolean"),") false for Host to use built-in action handler, true to skip built-in handler and stop."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example:")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"overrideBuiltInAction: ({ actionId, context, resource }) => {\n    //do some custom tasks\n    return true;\n},\n")),(0,o.mdx)("h2",{id:"examples"},"Examples"),(0,o.mdx)("p",null,"These code snippets demonstrate how to add a custom action to the ActionBar, hide built-in actions or override the\nbuilt-in action handlers from the ActionBar and QuickActions menu in the Browse View. (The examples below serve\nillustrative purposes thus omit certain import statements and other non-important parts.)"),(0,o.mdx)("p",null,"The ExtensionRegistration component initializes the extension registration process by calling the ",(0,o.mdx)("inlineCode",{parentName:"p"},"register()")," function\nprovided by the ",(0,o.mdx)("inlineCode",{parentName:"p"},"@adobe/uix-guest")," library."),(0,o.mdx)("p",null,"The objects passed to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"register()")," function describe the extension and its capabilities. In particular, it declares\nthat the extension uses the ",(0,o.mdx)("inlineCode",{parentName:"p"},"actionBar")," and ",(0,o.mdx)("inlineCode",{parentName:"p"},"quickActions")," namespaces and declares required methods for these namespaces."),(0,o.mdx)("p",null,"This example demonstrates the minimal set of namespaces and methods required for a browse extension to be recognized\nby the Host application."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function ExtensionRegistration() {\n    const init = async () => {\n        const guestConnection = await register({\n            id: extensionId,\n            methods: {\n                actionBar: {\n                    async getActions({ context, resourceSelection }) {\n                        return [];\n                    },\n                    async getHiddenBuiltInActions({ context, resourceSelection }) {\n                        return [];\n                    },\n                    async overrideBuiltInAction({ actionId, context, resourceSelection }) {\n                        return false;\n                    },\n                },\n                quickActions: {\n                    async getHiddenBuiltInActions({ context, resource }) {\n                        return [];\n                    },\n                    async overrideBuiltInAction({ actionId, context, resource }) {\n                        return false;\n                    },\n                },\n            },\n        });\n    };\n    init().catch(console.error);\n\n    return <Text>IFrame for integration with Host (AEM Assets View)...</Text>;\n}\n\nexport default ExtensionRegistration;\n")),(0,o.mdx)("h3",{id:"example-of-adding-custom-actions"},"Example of adding custom actions"),(0,o.mdx)("p",null,"Here is an example for adding a custom action after the built-in actions in the ActionBar."),(0,o.mdx)("p",null,"In the example below, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"context")," and the number of selected assets are considered for the decision of adding a custom\naction labeled with ",(0,o.mdx)("inlineCode",{parentName:"p"},"Custom label")," along with the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Form")," icon is added in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"assets")," context when the number of\nselected assets is 1."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function ExtensionRegistration() {\n    const init = async () => {\n        const guestConnection = await register({\n            id: extensionId,\n            methods: {\n                actionBar: {\n                    async getActions({ context, resourceSelection }) {\n                        if (context === 'assets' && resourceSelection.resources.length === 1) {\n                            return [{\n                                'id': 'customId',\n                                'icon': 'Form',\n                                'label': 'Custom label',\n                                'onClick': async () => {\n                                    // ...\n                                }\n                            }];\n                        }\n                        return [];\n                    },\n                },\n                // ...\n            },\n        });\n    };\n    init().catch(console.error);\n\n    return <Text>IFrame for integration with Host (AEM Assets View)...</Text>;\n}\n\nexport default ExtensionRegistration;\n")),(0,o.mdx)("h3",{id:"example-of-hiding-built-in-actions"},"Example of hiding built-in actions"),(0,o.mdx)("p",null,"Here are the examples for hiding built-in actions from the ActionBar and the QuickActions menu."),(0,o.mdx)("p",null,"In this example, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Delete")," action is hidden from the ActionBar only in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"trash")," context.  It does not hide any\nactions in the other contexts."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function ExtensionRegistration() {\n    const init = async () => {\n        const guestConnection = await register({\n            id: extensionId,\n            methods: {\n                actionBar: {\n                    // ...\n                    async getHiddenBuiltInActions({ context, resourceSelection }) {\n                        if (context === 'trash') {\n                            return ['delete'];\n                        }\n                        return [];\n                    },\n                },\n                // ...\n            },\n        });\n    };\n    init().catch(console.error);\n\n    return <Text>IFrame for integration with Host (AEM Assets View)...</Text>;\n}\n")),(0,o.mdx)("p",null,"In the example below, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Delete")," action is hidden from the QuickActions menu only in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"trash")," context.  It does not\nhide any actions in the other contexts."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function ExtensionRegistration() {\n    const init = async () => {\n        const guestConnection = await register({\n            id: extensionId,\n            methods: {\n                quickActions: {\n                    async getHiddenBuiltInActions({ context, resource }) {\n                        if (context === 'trash') {\n                            return ['delete'];\n                        }\n                        return [];\n                    },\n                },\n                // ...\n            },\n        });\n    };\n    init().catch(console.error);\n\n    return <Text>IFrame for integration with Host (AEM Assets View)...</Text>;\n}\n")),(0,o.mdx)("h3",{id:"example-of-overriding-built-in-actions"},"Example of overriding built-in actions"),(0,o.mdx)("p",null,"Here are the examples for overriding the built-in actions from the ActionBar and the QuickActions menu."),(0,o.mdx)("p",null,"In this example, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Download")," action is overriden in the ActionBar in any applicable context.  The extension will\ndetermine if the user has permission to download the asset selection.  If the user does not have sufficient permision,\na dialog will be displayed and the built-in handler in the Host application will be skipped."),(0,o.mdx)("p",null,"The built-in handlers will be executed when the user has sufficient permission to download as well as\nfor other built-in actions."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function ExtensionRegistration() {\n    const init = async () => {\n        const guestConnection = await register({\n            id: extensionId,\n            methods: {\n                actionBar: {\n                    // ...\n                    async overrideBuiltInAction({ actionId, context, resourceSelection }) {\n                        if (actionId === 'download') {\n                            // determines the user's permission to download\n                            const canDownload = ...\n                            // shows an info dialog explaining why the user cannot download and return true to skip built-in handler and stop \n                            if (!canDownload) {\n                                guestConnection.host.modal.openDialog({\n                                    title: 'Download',\n                                    contentUrl: '/#modal-download-warning',\n                                    type: 'modal',\n                                    size: 'S',\n                                    payload: { /* arbitrary payload */ }\n                                });\n                                // skip built-in handler\n                                return true;\n                            }\n                        }\n                        // continue to execute built-in handler\n                        return false;\n                    },\n                },\n                // ...\n            },\n        });\n    };\n    init().catch(console.error);\n\n    return <Text>IFrame for integration with Host (AEM Assets View)...</Text>;\n}\n")),(0,o.mdx)("p",null,"In the example below, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Download")," action is overriden in the QuickActions menu in any applicable context.  The extension will\ndetermine if the user has permission to download the asset selection.  If the user does not have sufficient permision,\na dialog will be displayed and the built-in handler in the Host application will be skipped."),(0,o.mdx)("p",null,"The built-in handlers will be executed when the user has sufficient permission to download as well as\nfor other built-in actions."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},"function ExtensionRegistration() {\n    const init = async () => {\n        const guestConnection = await register({\n            id: extensionId,\n            methods: {\n                quickActions: {\n                    // ...\n                    async overrideBuiltInAction({ actionId, context, resource }) {\n                        if (actionId === 'download') {\n                            // determines the user's permission to download\n                            const canDownload = ...\n                            // shows an info dialog explaining why the user cannot download and return true to skip built-in handler and stop \n                            if (!canDownload) {\n                                guestConnection.host.modal.openDialog({\n                                    title: 'Download',\n                                    contentUrl: '/#modal-download-warning',\n                                    type: 'modal',\n                                    size: 'S',\n                                    payload: { /* arbitrary payload */ }\n                                });\n                                // skip built-in handler\n                                return true;\n                            }\n                        }\n                        // continue to execute built-in handler\n                        return false;\n                    },\n                },\n                // ...\n            },\n        });\n    };\n    init().catch(console.error);\n\n    return <Text>IFrame for integration with Host (AEM Assets View)...</Text>;\n}\n")),(0,o.mdx)("p",null,"To open a custom dialog from from custom ActionBar actions or QuickActions menu actions, refer to the\n",(0,o.mdx)("a",{parentName:"p",href:"../commons/#modal-api"},"Modal API")," provided by AEM Assets View to all extensions for implementation of\ndialog management."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-services-aem-assets-view-api-browse-view-index-md-1ef52afea0eeb9594287.js.map