"use strict";(self.webpackChunk_adobe_uix_docs=self.webpackChunk_adobe_uix_docs||[]).push([[123],{16488:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return m}});var o=t(87462),i=t(45987),a=(t(15007),t(64983)),r=t(91515);const s=["components"],d={},c={_frontmatter:d},l=r.Z;function m(e){let{components:n}=e,t=(0,i.Z)(e,s);return(0,a.mdx)(l,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"working-with-custom-events"},"Working with Custom Events"),(0,a.mdx)("p",null,"The Universal Editor sends defined events to the remote application, on top of this ",(0,a.mdx)("inlineCode",{parentName:"p"},"CustomEvent")," can also be sent directly from the Extension to the remote application."),(0,a.mdx)("h3",{id:"working-with-custom-events-1"},"Working with Custom Events"),(0,a.mdx)("p",null,"You can send events to the remote application using the ",(0,a.mdx)("inlineCode",{parentName:"p"},"triggerEvent")," method."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"    useEffect(() => {\n        (async () => {\n            const guestConnection = await attach({id: extensionId});\n            ...\n                   await guestConnection.host.remoteApp.triggerEvent('my-custom-event',\n                        'body',\n                        {\n                          example: 'payload'\n                        }\n                    );\n            ...\n        })();\n    }, []);\n")),(0,a.mdx)("h2",{id:"api-reference"},"API Reference"),(0,a.mdx)("h3",{id:"triggerevent-api"},"TriggerEvent API"),(0,a.mdx)("p",null,"| Field    | Type                                                                        | Required | Description                                                                                                                   |\n| eventName | ",(0,a.mdx)("inlineCode",{parentName:"p"},"string")," | ✔️ | Name of the event |\n| selector  | ",(0,a.mdx)("inlineCode",{parentName:"p"},"string")," | ✔️ | A valid CSS selector string|\n| payload  | Serializable ",(0,a.mdx)("inlineCode",{parentName:"p"},"object"),"| An object that, in addition of the properties defined in the Event Constructor |"),(0,a.mdx)("h3",{id:"subscribing-to-events"},"Subscribing to events:"),(0,a.mdx)("p",null,"To listen to events sent by the Universal Editor, you can subscribe to them using the next declaration:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"    function ExtensionRegistration() {\n  const init = async () => {\n    const guestConnection = await register({\n      id: extensionId,\n      methods: {\n        events: {\n          listen: (eventName, data) => {\n            console.log(`Extension registered to listen to event: ${eventName}. The event data: ${JSON.stringify(data)}`);\n          }\n        },\n      }\n    });\n\n  };\n  init().catch((error) => console.error(error));\n\n  return <Text>IFrame for integration with Host (AEM)...</Text>\n}\n\n")),(0,a.mdx)("p",null,"The extension has the capability to subscribe to a wide range of events offered by the Universal Editor, enabling seamless integration and enhanced functionality."),(0,a.mdx)("p",null,"For a comprehensive list of all available events and the corresponding response interfaces, please refer to the ",(0,a.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/en/docs/experience-manager-cloud-service/content/implementing/developing/universal-editor/events"},"Universal Editor Events documentation"),". "))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-services-aem-universal-editor-api-events-index-md-894e649f6916c21f57cc.js.map